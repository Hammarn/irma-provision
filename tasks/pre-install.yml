--- 

  # These tasks need to run before any other roles, to setup proper 
  # environment variables depending on we're deploying to production, 
  # staging, or development/test purposes. 
  
  # TODO: Perhaps this logic can be made more pretty somehow. 

  - fail: msg="You must specify '-e deployment_environment=<production|staging|devel>'"
    when: deployment_environment not in [ "production", "staging", "devel" ]

  - block: 
    # Generate a semi-unique root folder for devel deployment. 
    # Depends on that we're standing inside the git repo while running the ansible-playbook command. 
    - shell: echo `whoami`_`git rev-parse --abbrev-ref HEAD` 
      register: devel_version
    - name: set root path and proj root for development 
      set_fact: 
        root_path: "/lupus/ngi/irma3/devel-root/{{ devel_version.stdout }}"
        proj_root: "/lupus/ngi/irma3/devel-root/wildwest/"
    - name: set delivery path for development
      set_fact: 
        milou_delivery_root: "{{ proj_root }}/milou-delivery/"
    - debug: msg="Ignoring deployment_version for devel deployment. Using autogenerated {{ devel_version.stdout }} instead."
      when: deployment_version != "default"
    when: deployment_environment == "devel"

  - block:
    # Fetching the version from git instead. This means though that several copies of the same tag
    # can be deployed parallel to each other if the deployment_version is explicetly != "default". 
#    - fail: msg="You must specify a version to deploy for production/staging with '-e deployment_version=<github release tag|commit hash>'"
#      when: deployment_version == "default"
    - shell: git describe --tags
      register: git_tag
      args: 
        chdir: "/lupus/ngi/irma3/deploy"
      when: deployment_version == "default"
    - name: set root path for staging and production
      set_fact: 
        root_path: "/lupus/ngi/{{ deployment_environment }}/{{ git_tag.stdout }}"
      when: deployment_version == "default"
    - name: set root path for staging and production
      set_fact: 
        root_path: "/lupus/ngi/{{ deployment_environment }}/{{ deployment_version }}"
      when: deployment_version != "default"
    - stat: path={{ root_path }} 
      register: p
    - fail: msg="Aborting! Directory {{ root_path }} already exists. Remove the dir or call playbook with '-e deployment_override=true' if you want to deploy anyway."
      when: deployment_override == false and p.stat.isdir is defined and p.stat.isdir
    when: deployment_environment in [ "staging", "production" ]

  - block: 
    - name: set proj root for staging
      set_fact: 
        proj_root: "/lupus/ngi/staging/wildwest/"
    - name: set delivery root for staging 
      set_fact: 
        milou_delivery_root: "{{ proj_root }}/milou-delivery/"
    - name: create staging proj root dir (wildwest) and milou-delivery
      file: path={{ item }} state=directory mode="g+rwxs,u+rwx"
      with_items: 
        - "{{ proj_root }}"
        - "{{ milou_delivery_root }}"
    when: deployment_environment == "staging"

  - name: set proj root for production
    set_fact: 
      proj_root: "/proj/"
  - name: set delivery root for production
    set_fact: 
      milou_delivery_root: "/pica/sw/links/proj/"
    when: deployment_environment == "production"
  
  # charon variables are fetched from private host_vars/127.0.0.1/charon_credentials.yml 
  - name: set charon envs for production 
    set_fact:   
      charon_base_url: "{{ charon_base_url_prod }}"
      charon_api_token_sthlm: "{{ charon_api_token_sthlm_prod }}"
      charon_api_token_upps: "{{ charon_api_token_upps_prod }}"
    when: deployment_environment == "production"

  - name: set charon envs for staging and devel
    set_fact: 
      charon_base_url: "{{ charon_base_url_stage }}"
      charon_api_token_sthlm: "{{ charon_api_token_sthlm_stage }}"
      charon_api_token_upps: "{{ charon_api_token_upps_stage }}"
    when: deployment_environment in [ "staging", "devel" ]

